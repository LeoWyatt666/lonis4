security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [our_db_provider, steam_user_provider]

        in_memory: { memory: ~ }

        our_db_provider:
            entity:
                class: App\Entity\CsPlayers
                #property: username

        steam_user_provider:
            id: Knojector\SteamAuthenticationBundle\Security\User\SteamUserProvider

    # encoders:
    #     Symfony\Component\Security\Core\User\User: plaintext
    encoders:
        App\Entity\CsPlayers:
            algorithm: md5
            encode_as_base64: false
            iterations: 0

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main:
            anonymous: ~
            http_basic: ~
            provider: chain_provider
            steam: true
            form_login:
                login_path: /auth/login
                check_path: /auth/login
        
            logout:
                path:   /auth/logout
                target: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
